<style>
  #uploadImageLabel {
    font-size: 16px;
    font-family: 'Bobby Jones', 'Comico', cursive;
  }

  #uploadImageLabel:hover {
    pointer: cursor;
  }

  #imageHelpText {
    background: none;
  }

  .image-container {
    width: 200px;
    height: 100px;
    border: 1px dotted #999;
    padding: 10px;
    transition: all 0.3s ease;
  }

  .image-container.drag-over {
    border: 2px dashed #007bff;
    background-color: rgba(0, 123, 255, 0.1);
    transform: scale(1.02);
  }

  .image-container.drag-over #imageHelpText {
    color: #007bff;
  }
</style>

<div class="image-container" id="dropZone">
  <label id="uploadImageLabel" for="fileToUpload">
    {{!-- <img id="image" src="{{#if image_url}}{{ image_url }}{{else}}{{thumbnail}}{{/if}}"> --}}

    <div id="image_previews">
      <img id="loading" />
    </div>

    <span id="imageHelpText">Click to upload image or drag & drop</span>
  </label>

  <form id="imageForm" style="display: none;">
    <input type="file" accept="image/*" name="fileToUpload" id="fileToUpload" multiple/>
  </form>
</div>

<br />

<script>
  const dropZone = document.getElementById('dropZone');
  const fileInput = document.getElementById('fileToUpload');
  const imageHelpText = document.getElementById('imageHelpText');
  const imagePreview = document.getElementById('image_preview');

  // Prevent default drag behaviors
  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
    dropZone.addEventListener(eventName, preventDefaults, false);
    document.body.addEventListener(eventName, preventDefaults, false);
  });

  // Highlight drop zone when item is dragged over it
  ['dragenter', 'dragover'].forEach(eventName => {
    dropZone.addEventListener(eventName, highlight, false);
  });

  ['dragleave', 'drop'].forEach(eventName => {
    dropZone.addEventListener(eventName, unhighlight, false);
  });

  // Handle dropped files
  dropZone.addEventListener('drop', handleDrop, false);

  // Handle file input change
  fileInput.addEventListener('change', handleFiles);

  function preventDefaults(e) {
    e.preventDefault();
    e.stopPropagation();
  }

  function highlight(e) {
    dropZone.classList.add('drag-over');
  }

  function unhighlight(e) {
    dropZone.classList.remove('drag-over');
  }

  function handleDrop(e) {
    const dt = e.dataTransfer;
    const files = dt.files;

    // Clear the file input first
    fileInput.files = files;

    handleFiles({ target: { files: files } });
  }

  function handleFiles(event) {
    if (event.target.files.length === 0) {
      console.log("No file selected");
      return;
    }

    const files = event.target.files;

    Promise.all(Array.from(files).map(file => {

    // Validate file type
    if (!file.type.startsWith('image/')) {
      alert('Please select an image file');
      return;
    }

    console.log("File selected:", file.name, file.type, file.size);

    // Show uploading state
    imageHelpText.textContent = "Uploading image... please wait";
    document.getElementById('loading').src = "/images/loading.gif";

    // Create FormData and manually append the file
    const formData = new FormData();
    formData.append('fileToUpload', file);

    // Add any other form fields you need
    formData.append('caption', '');
    formData.append('filename', file.name);
    formData.append('title', file.name);
    formData.append('keywords', '');

    $.ajax({
      url: '/uploadPhoto',
      type: 'POST',
      data: formData,
      cache: false,
      contentType: false,
      processData: false,
      success: function (data) {
        data = JSON.parse(data);
        console.log("success: data", data);

        imageHelpText.textContent = "Image uploaded! Click save!";
//        document.getElementById('image').src = data.thumbnailUrl;

        document.getElementById('image_previews').innerHTML += `<img src="${data.thumbnailUrl}" />`;
      },
      error: function (err) {
        console.log("err", err);
        imageHelpText.textContent = "Error. Try again :(";
      }
    });

    })).finally(() => {
      document.getElementById('loading').src = "";
    })
  }




  // TODO: Rewrite so we don't need D3js
  // Or at least, give a warning
  // Or maybe load it in this file?




  /*
  
    d3.select("#fileToUpload").on("change", function (event, thing, thing2) {
      d3.select("#imageHelpText").text("Uploading image... please wait");
      //loading.gif
      d3.select("#image").attr("src", "/images/loading.gif");
  
      console.log("event", event)
      console.log("thing", thing)
      console.log("thing2", thing2)
  
      var file = event.target.files[0];
      var filetype = file.type;
      console.log("filetype", filetype)
  
      if (file) {
        console.log("Hey, we have a file")
  
        var reader = new FileReader();
        reader.onloadend = function (event) {
          console.log(event);
  
          var formData = new FormData(document.getElementById("imageForm"));
  
          $.ajax({
            url: '/uploadPhoto',
            type: 'POST',
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            error: function (err) {
              console.log("There's an error!")
  
              d3.select("#imageHelpText").text("Error. Try again :(");
              d3.select("#image").attr("src", "");
  
              console.log("err", err)
            },
            success: function (imageBlob) {
              d3.select("#imageHelpText").text("Image uploaded! Click save!");
              const data = JSON.parse(imageBlob);
  
              console.log("photo uploaded! imageBlob:")
              console.log(imageBlob)
  
              d3.select("#image").attr("src", data.thumbnail);
              d3.select("#image_url").attr("value", data.image_url);
              d3.select("#imageKey").attr("value", data.imageKey);
              d3.select("#thumbnail").attr("value", data.thumbnail);
  //            document.getElementById("saveButton").click();
            }
          })
        }
        reader.readAsDataURL(file);
      }
    });
  */
</script>